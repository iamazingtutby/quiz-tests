{"version":3,"sources":["containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","hoc/Layout/Layout.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","containers/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Quiz","QuizWrapper","ActiveQuiz","Question","Layout","AnswersList","AnswerItem","react_default","a","createElement","className","classes","this","props","children","React","Component","onClick","onAnswerClick","answer","id","text","answers","map","index","AnswersList_AnswerItem_AnswerItem","key","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","state","activeQuestion","quiz","rightAnswerId","onAnswerClickHandler","answerId","console","log","_this","setState","components_ActiveQuiz_ActiveQuiz","length","App","Layout_Layout","Quiz_Quiz","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d6e377b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3ype8\",\"QuizWrapper\":\"Quiz_QuizWrapper__2Ri9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1w0jD\",\"Question\":\"ActiveQuiz_Question__2iEqj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2qcHE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2q-Jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3_92J\"};","import React from 'react';\r\nimport classes from './Layout.module.scss'\r\n\r\nexport default class Layout extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        \t<div className={classes.Layout}>\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n        \t</div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport classes from './AnswerItem.module.scss'\r\n\r\nconst AnswerItem = (props) => {\r\n    return (\r\n        <li\r\n            className={classes.AnswerItem}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.module.scss';\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = (props) => {\r\n\r\n    return (\r\n        <ul className={classes.AnswersList}>\r\n            { props.answers.map( (answer, index) => {\r\n                return (\r\n                    <AnswerItem\r\n                        key={index}\r\n                        answer={answer}\r\n                        onAnswerClick={props.onAnswerClick}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n\r\n};\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.scss'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuiz = (props) => {\r\n    return(\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.answerNumber}. </strong>\r\n                    {props.question}\r\n                </span>\r\n\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n\r\n            <AnswersList\r\n                answers={props.answers}\r\n                onAnswerClick={props.onAnswerClick}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveQuiz;\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Quiz.module.scss'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\n\r\nexport default class Quiz extends React.Component {\r\n\r\n    state = {\r\n        activeQuestion: 0,\r\n        quiz: [\r\n            {\r\n                question: 'Какого цвета небо',\r\n                rightAnswerId: 2,\r\n                id: 1,\r\n                answers: [\r\n                    {text: 'Черный', id: 1},\r\n                    {text: 'Синий', id: 2},\r\n                    {text: 'Красный', id: 3},\r\n                    {text: 'Зеленый', id: 4}\r\n                ]\r\n            },\r\n            {\r\n                question: 'В каком году?',\r\n                rightAnswerId: 2,\r\n                id: 2,\r\n                answers: [\r\n                    {text: '1700', id: 1},\r\n                    {text: '1702', id: 2},\r\n                    {text: '1703', id: 3},\r\n                    {text: '1805', id: 4}\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    onAnswerClickHandler = (answerId) => {\r\n        console.log('answerId', answerId)\r\n\r\n        this.setState({\r\n            activeQuestion: this.state.activeQuestion + 1\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    <ActiveQuiz\r\n                        answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                        question={this.state.quiz[this.state.activeQuestion].question}\r\n                        onAnswerClick={this.onAnswerClickHandler}\r\n                        quizLength={this.state.quiz.length}\r\n                        answerNumber={this.state.activeQuestion + 1}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport Quiz from './containers/Quiz/Quiz'\n\nclass App extends Component {\n  render() {\n    return (\n\n        <Layout>\n            <Quiz />\n        </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}